#!/usr/bin/env ruby
require 'fileutils'
project = ARGV.first
FileUtils.mkdir_p(project) unless File.directory?(project)

# create application
open("#{project}/#{project}.rb", "w") do |f|
  f.puts %(require 'rubygems'\n) +
    %(require 'redirect'\n\n) +
    %(redirect  ['/old_url', '/new_url', {:code => 307, :name => 'test'}],\n) +
    %(      ['^/some_regexp', '/all'])
end

# create config
open("#{project}/config.ru", "w") do |f|
  f.puts %(require 'rubygems'\n) +
    %(require 'redirect'\n\n) +
    %(Redirect.autorun = false\n\n) +
    %(require '#{project}.rb'\n\n) +
    %(run Redirect.app)
end

# create public dir
FileUtils.mkdir_p("#{project}/public") unless File.directory?("#{project}/public")

# create tests dir
FileUtils.mkdir_p("#{project}/test") unless File.directory?("#{project}/test")

# create sample test
open("#{project}/test/#{project}_test.rb", "w") do |f|
  f.puts %(require 'rubygems'
require 'redirect/test'

require File.dirname(__FILE__) + '/../#{project}.rb'

class TestClient < Test::Unit::TestCase

  def test_old_url
    assert_redirects('/old_url', '/new_url')
  end

end)
end
